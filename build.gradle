plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT' apply false
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
    id 'com.gradleup.shadow' version '8.3.0'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

def modVersion = project.mod_version
def modArchivesName = project.archives_base_name

allprojects {
    repositories {
        mavenCentral()
    }

    beforeEvaluate {
        project.setVersion(modVersion)
    }

    afterEvaluate {
        if (project.name != "common") {
            dependencies {
                implementation(project(":common"))
            }
        }

        base {
            archivesName = modArchivesName
        }

        shadowJar {
            configurations = [project.configurations.shadow]

            mergeServiceFiles()
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE

            exclude "kotlin/**", "kotlinx/**", "META-INF"
            exclude "org/slf4j/**"
            relocate "org.java_websocket", "cn.disy920.websocket"

            destinationDirectory = file("${rootProject.projectDir}/build/libs")
            archiveFileName = "${modArchivesName}-${project.version}-${project.name}.jar"
        }

        jar {
            dependsOn(shadowJar)
        }
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

tasks.register("buildAll") {
    dependsOn(":bukkit:build")
    dependsOn(":fabric:build")
}