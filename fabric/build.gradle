plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
}

apply plugin: 'fabric-loom'
apply plugin: 'com.gradleup.shadow'

version = rootProject.version
group = rootProject.group

base {
    archivesName = rootProject.archives_base_name
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modApi "net.fabricmc:fabric-language-kotlin:${project.kotlin_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    shadow "org.java-websocket:Java-WebSocket:1.5.6"
    shadow project(":common")
}

shadowJar {
    configurations = [project.configurations.shadow]

    mergeServiceFiles()
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude "kotlin/**", "kotlinx/**", "META-INF"
    exclude "org/slf4j/**"
    relocate "org.java_websocket", "cn.disy920.websocket"

    destinationDirectory = file("${rootProject.projectDir}/build/libs")
    archiveFileName = "${rootProject.archives_base_name}-${project.version}-${project.name}.jar"
}

build {
    dependsOn(shadowJar)
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

java {
    withSourcesJar()
}

kotlin {
    jvmToolchain(targetJavaVersion)
}
